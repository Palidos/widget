{"version":3,"sources":["assets/womanEmoji.svg","assets/CrossIcon/index.js","assets/MessageBubbleIcon/index.js","components/CustomLauncher.js","components/Header.js","components/HelloPage.js","components/TodayPanel.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","className","width","height","viewBox","fill","xmlns","filter","rx","transform","id","x","y","filterUnits","colorInterpolationFilters","floodOpacity","result","in","type","values","dy","stdDeviation","mode","in2","fillRule","clipRule","d","CustomLauncher","handleToggle","useState","isOpen","setIsOpen","onClick","localStorage","getItem","setItem","Date","prevState","CrossIcon","MessageBubbleIcon","Header","HelloPage","setHelloPage","document","documentElement","style","setProperty","src","WomanEmoji","alt","TodayPanel","dateOfSending","someDate","today","getDate","getMonth","getFullYear","isToday","toLocaleDateString","App","helloPage","useEffect","renderCustomComponent","addResponseMessage","onKeyDown","e","key","handleNewUserMessage","newMessage","launcher","titleAvatar","title","subtitle","senderPlaceHolder","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.991f0a90.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/womanEmoji.f3f4fa3f.svg\";","import React from 'react';\r\n\r\n// CrossIcon component\r\nexport default ({ className }) => (\r\n  <div className={className}>\r\n    <svg\r\n      width='22'\r\n      height='22'\r\n      viewBox='0 0 22 22'\r\n      fill='none'\r\n      xmlns='http://www.w3.org/2000/svg'\r\n    >\r\n      <g filter='url(#filter0_d)'>\r\n        <rect\r\n          width='1.40404'\r\n          height='26.6768'\r\n          rx='0.702022'\r\n          transform='matrix(0.712227 -0.701949 0.712227 0.701949 1 0.985474)'\r\n          fill='white'\r\n        />\r\n        <rect\r\n          width='1.40404'\r\n          height='26.6768'\r\n          rx='0.702022'\r\n          transform='matrix(0.712227 0.701949 -0.712227 0.701949 19.9999 0.288635)'\r\n          fill='white'\r\n        />\r\n      </g>\r\n      <defs>\r\n        <filter\r\n          id='filter0_d'\r\n          x='0.292847'\r\n          y='0.288574'\r\n          width='21.4142'\r\n          height='21.4228'\r\n          filterUnits='userSpaceOnUse'\r\n          colorInterpolationFilters='sRGB'\r\n        >\r\n          <feFlood\r\n            floodOpacity='0'\r\n            result='BackgroundImageFix'\r\n          />\r\n          <feColorMatrix\r\n            in='SourceAlpha'\r\n            type='matrix'\r\n            values='0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0'\r\n          />\r\n          <feOffset dy='1' />\r\n          <feGaussianBlur stdDeviation='0.5' />\r\n          <feColorMatrix\r\n            type='matrix'\r\n            values='0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0'\r\n          />\r\n          <feBlend\r\n            mode='normal'\r\n            in2='BackgroundImageFix'\r\n            result='effect1_dropShadow'\r\n          />\r\n          <feBlend\r\n            mode='normal'\r\n            in='SourceGraphic'\r\n            in2='effect1_dropShadow'\r\n            result='shape'\r\n          />\r\n        </filter>\r\n      </defs>\r\n    </svg>\r\n\r\n  </div>\r\n);\r\n","import React from 'react';\r\n\r\n// MessageBubbleIcon component\r\nexport default ({ className }) => (\r\n  <div className={className}>\r\n    <svg\r\n      width='30'\r\n      height='27'\r\n      viewBox='0 0 30 27'\r\n      fill='none'\r\n      xmlns='http://www.w3.org/2000/svg'\r\n    >\r\n      <g filter='url(#filter0_d)'>\r\n        <path\r\n          fillRule='evenodd'\r\n          clipRule='evenodd'\r\n          d='M19 2H11C6.58172 2 3 5.58172 3 10C3 14.4183 6.58172 18 11 18H19C23.4183 18 27 14.4183 27 10C27 5.58172 23.4183 2 19 2ZM29 10C29 4.47715 24.5228 0 19 0H11C5.47715 0 1 4.47715 1 10C1 15.5228 5.47715 20 11 20H15.8046L17.092 21L20.2414 23.4464L22.2414 25V22.4675V21V19.463C26.1733 18.1165 29 14.3883 29 10Z'\r\n          fill='white'\r\n        />\r\n      </g>\r\n      <defs>\r\n        <filter\r\n          id='filter0_d'\r\n          x='0'\r\n          y='0'\r\n          width='30'\r\n          height='27'\r\n          filterUnits='userSpaceOnUse'\r\n          colorInterpolationFilters='sRGB'\r\n        >\r\n          <feFlood\r\n            floodOpacity='0'\r\n            result='BackgroundImageFix'\r\n          />\r\n          <feColorMatrix\r\n            in='SourceAlpha'\r\n            type='matrix'\r\n            values='0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0'\r\n          />\r\n          <feOffset dy='1' />\r\n          <feGaussianBlur stdDeviation='0.5' />\r\n          <feColorMatrix\r\n            type='matrix'\r\n            values='0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.2 0'\r\n          />\r\n          <feBlend\r\n            mode='normal'\r\n            in2='BackgroundImageFix'\r\n            result='effect1_dropShadow'\r\n          />\r\n          <feBlend\r\n            mode='normal'\r\n            in='SourceGraphic'\r\n            in2='effect1_dropShadow'\r\n            result='shape'\r\n          />\r\n        </filter>\r\n      </defs>\r\n    </svg>\r\n  </div>\r\n);\r\n","import React, { useState } from 'react';\r\n\r\nimport CrossIcon from 'assets/CrossIcon';\r\nimport MessageBubbleIcon from 'assets/MessageBubbleIcon';\r\n\r\nexport default function CustomLauncher(handleToggle) {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const saveDate = () => {\r\n    if (localStorage.getItem('date') === null) {\r\n      localStorage.setItem('date', new Date());\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <button\r\n        type='button'\r\n        onClick={() => {\r\n          handleToggle();\r\n          saveDate();\r\n          setIsOpen(prevState => !prevState);\r\n        }}\r\n        className={'launcher__button'}\r\n      >\r\n        {!isOpen && <span className='launcher__tooltip'>{'Подписаться на новости!'}</span>}\r\n        {isOpen\r\n          ? <CrossIcon className={'launcher__icon'} />\r\n          : <MessageBubbleIcon className={'launcher__icon'} />}\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport 'widget.css';\r\n\r\nexport default function Header() {\r\n  return (\r\n    <div className={'header__text'}>\r\n      <div className={'header__bot'}>{'Бот'}</div>\r\n      <div className={'header__status'}>\r\n        <span className={'header__circle'}></span>\r\n        <span className={'header__online'}>{'Онлайн'}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nimport 'widget.css';\r\nimport WomanEmoji from 'assets/womanEmoji.svg';\r\n\r\nexport default function HelloPage({ setHelloPage }) {\r\n  const handleClick = () => {\r\n    document.documentElement.style.setProperty('--header-height', '50px');\r\n    document.documentElement.style.setProperty('--main-body-height', '420px');\r\n    document.documentElement.style.setProperty('--main-body-padding-top', '10px');\r\n    setHelloPage(false);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      onClick={handleClick}\r\n      className={'hello-page__container'}\r\n    >\r\n      <div className={'hello-page__title'}>{'Бот'}</div>\r\n      <div className={'hello-page__footer'}>\r\n        <img\r\n          className={'hello-page__woman'}\r\n          src={WomanEmoji}\r\n          alt=''\r\n        />\r\n        <div className={'hello-page__primary-text'}>{'Привет,'}</div>\r\n        <div className={'hello-page__primary-text hello-page__primary-text--last'}>{'я онлайн'}</div>\r\n        <div className={'hello-page__secondary-text'}>{'Есть вопросы? Спрашивай!'}</div>\r\n        <div className={'hello-page__secondary-text'}>{'Я с ними обязательно справлюсь.'}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function TodayPanel() {\r\n  const dateOfSending = new Date(localStorage.getItem('date'));\r\n\r\n  const isToday = someDate => {\r\n    const today = new Date();\r\n    return someDate.getDate() === today.getDate() &&\r\n      someDate.getMonth() === today.getMonth() &&\r\n      someDate.getFullYear() === today.getFullYear();\r\n  };\r\n\r\n  return (\r\n    <div className={'messages__today-text'}>\r\n      {isToday(dateOfSending)\r\n        ? 'Сегодня'\r\n        : dateOfSending.toLocaleDateString()}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Widget,\r\n  addResponseMessage,\r\n  renderCustomComponent,\r\n} from 'react-chat-widget';\r\n\r\nimport './widgetStylesOverride.css';\r\nimport 'react-chat-widget/lib/styles.css';\r\n\r\nimport WomanEmoji from 'assets/womanEmoji.svg';\r\nimport CustomLauncher from 'components/CustomLauncher';\r\nimport Header from 'components/Header';\r\nimport HelloPage from 'components/HelloPage';\r\nimport TodayPanel from 'components/TodayPanel';\r\n\r\nfunction App() {\r\n  const [helloPage, setHelloPage] = useState(true);\r\n  const handleNewUserMessage = newMessage => {\r\n    addResponseMessage(`${newMessage}`);\r\n  };\r\n\r\n  // const handleClick = () => {\r\n  //   document.documentElement.style.setProperty('--header-height', '470px');\r\n  //   document.documentElement.style.setProperty('--main-body-height', '0px');\r\n  //   document.documentElement.style.setProperty('--main-body-padding-top', '0px');\r\n  // };\r\n\r\n  const handleKeyDown = e => {\r\n    if (e.key === 'Enter') {\r\n      document.documentElement.style.setProperty('--header-height', '50px');\r\n      document.documentElement.style.setProperty('--main-body-height', '420px');\r\n      document.documentElement.style.setProperty('--main-body-padding-top', '10px');\r\n      setHelloPage(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    renderCustomComponent(TodayPanel);\r\n    addResponseMessage(`Вы сможете принять наш пробник в понедельник утром?`);\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className='App'\r\n      onKeyDown={handleKeyDown}\r\n    >\r\n      <Widget\r\n        handleNewUserMessage={handleNewUserMessage}\r\n        launcher={handleToggle => CustomLauncher(handleToggle)}\r\n        titleAvatar={!helloPage && WomanEmoji}\r\n        title={helloPage ? <HelloPage setHelloPage={setHelloPage} /> : <Header />}\r\n        subtitle={''}\r\n        senderPlaceHolder={'Напишите нам'}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","/* eslint-disable no-use-before-define */\r\n/* eslint-disable no-param-reassign */\r\n// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\r\n    ),\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, { headers: { 'Service-Worker': 'script' } })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.',\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}